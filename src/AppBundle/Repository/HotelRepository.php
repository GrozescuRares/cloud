<?php

namespace AppBundle\Repository;

use AppBundle\Entity\User;
use AppBundle\Enum\PaginationConfig;
use AppBundle\Enum\UserConfig;

/**
 * HotelRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HotelRepository extends \Doctrine\ORM\EntityRepository
{
    /**
     * @return array
     */
    public function getHotelsWithReservations()
    {
        $qb = $this->createQueryBuilder('hotel');
        $qb
            ->innerJoin('hotel.reservations', 'reservations')
            ->where($qb->expr()->isNull('reservation.deletedAt'))
            ->groupBy('hotel.hotelId');

        return $qb->getQuery()->getResult();
    }

    /**
     * @param User $owner
     * @return float
     */
    public function getHotelsPagesNumber(User $owner)
    {
        $hotels = $this->createQueryBuilder('hotel')
            ->where('hotel.owner = :owner')
            ->setParameter('owner', $owner)
            ->getQuery()
            ->getResult();

        return ceil(count($hotels) / PaginationConfig::ITEMS);
    }

    /**
     * @param User  $owner
     * @param mixed $offset
     * @param mixed $column
     * @param mixed $sort
     * @return mixed
     */
    public function paginateAndSortHotels(User $owner, $offset, $column = null, $sort = null)
    {
        $qb = $this->createQueryBuilder('hotel');
        $qb ->where('hotel.owner =:owner')
            ->setParameter('owner', $owner)
            ->setMaxResults(PaginationConfig::ITEMS)
            ->setFirstResult($offset);

        if (!empty($column) and !empty($sort)) {
            $qb->orderBy('hotel.'.$column, $sort);
        }

        return $qb->getQuery()->getResult();
    }
}
